{
	"info": {
		"_postman_id": "61680876-398f-42dc-8c37-eb61caabc76b",
		"name": "PetStore",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23776611"
	},
	"item": [
		{
			"name": "Pet",
			"item": [
				{
					"name": "Add new pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful request\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"const jsondata = pm.response.json();\r",
									"pm.environment.set(\"PetID\", jsondata.id);\r",
									"\r",
									"pm.test(\"verify id\", function () {\r",
									"    var jsonData = pm.environment.get(\"PetID\");\r",
									"        pm.expect(jsonData).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 1,\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"trexie\"\r\n  },\r\n  \"name\": \"t-rex\",\r\n  \"photoUrls\": [\r\n    \"https://upload.wikimedia.org/wikipedia/commons/f/fd/Fancy_rat_blaze.jpg\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 11,\r\n      \"name\": \"trexie\"\r\n    }\r\n  ],\r\n  \"status\": \"sold\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/pet",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/pet/{{PetID}}?name=t-rexieeeee&status=aviable",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pet",
								"{{PetID}}"
							],
							"query": [
								{
									"key": "petId",
									"value": "1",
									"disabled": true
								},
								{
									"key": "name",
									"value": "t-rexieeeee"
								},
								{
									"key": "status",
									"value": "aviable"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an existing pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful request\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 9223372036854246418,\r\n  \"category\": {\r\n    \"id\": 9223372036854246418,\r\n    \"name\": \"string\"\r\n  },\r\n  \"name\": \"doggieee\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 9223372036854246418,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"not aviable\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/pet",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find pet by status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful request\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"verify id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[0].id).to.eql(9223372036854248833);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/pet/findByStatus?status=sold",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "sold"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find pet by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful request\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"verify name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"t-rex\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/pet/1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pet",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful request\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/pet/1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pet",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Store",
			"item": [
				{
					"name": "Place order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful request\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"var jsondata = JSON.parse(responseBody);\r",
									"pm.environment.set(\"OrderID\", jsondata.id);\r",
									"\r",
									"console.log(jsondata);\r",
									"console.log(jsondata.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 123,\r\n  \"petId\": 0,\r\n  \"quantity\": 0,\r\n  \"shipDate\": \"2023-02-06T08:55:30.524Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/store/order",
							"host": [
								"{{URL}}"
							],
							"path": [
								"store",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find order by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful request\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/store/order/{{OrderID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"store",
								"order",
								"{{OrderID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pet inventories by status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful request\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"petId\": 0,\r\n  \"quantity\": 0,\r\n  \"shipDate\": \"2023-02-06T08:55:30.524Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/store/inventory",
							"host": [
								"{{URL}}"
							],
							"path": [
								"store",
								"inventory"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful request\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/store/order/{{OrderID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"store",
								"order",
								"{{OrderID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"verify type\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.type).to.eql(\"unknown\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"username\": \"tes11\",\r\n  \"firstName\": \"tesss\",\r\n  \"lastName\": \"ttess\",\r\n  \"email\": \"ttss@tt.com\",\r\n  \"password\": \"1111\",\r\n  \"phone\": \"123121231231\",\r\n  \"userStatus\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful request\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"logged in\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/user/login?username=tes11&password=1111",
							"host": [
								"{{URL}}"
							],
							"path": [
								"user",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "tes11"
								},
								{
									"key": "password",
									"value": "1111"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful request\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"verify message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"ok\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/user/logout?username=tes11&password=1111",
							"host": [
								"{{URL}}"
							],
							"path": [
								"user",
								"logout"
							],
							"query": [
								{
									"key": "username",
									"value": "tes11"
								},
								{
									"key": "password",
									"value": "1111"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create users with array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"verify type\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.type).to.eql(\"unknown\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n  \"id\": 0,\r\n  \"username\": \"tes111\",\r\n  \"firstName\": \"tesss1\",\r\n  \"lastName\": \"ttess1\",\r\n  \"email\": \"ttss@tt1.com\",\r\n  \"password\": \"11111\",\r\n  \"phone\": \"1231212312311\",\r\n  \"userStatus\": 1\r\n},\r\n    {\r\n  \"id\": 0,\r\n  \"username\": \"tes112\",\r\n  \"firstName\": \"tesss2\",\r\n  \"lastName\": \"ttess2\",\r\n  \"email\": \"ttss@tt2.com\",\r\n  \"password\": \"11112\",\r\n  \"phone\": \"1231212312312\",\r\n  \"userStatus\": 2\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/user/createWithArray",
							"host": [
								"{{URL}}"
							],
							"path": [
								"user",
								"createWithArray"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find user by name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful request\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/user/tes111",
							"host": [
								"{{URL}}"
							],
							"path": [
								"user",
								"tes111"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful request\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"username\": \"tes11\",\r\n  \"firstName\": \"tesssaa\",\r\n  \"lastName\": \"ttessa\",\r\n  \"email\": \"ttss@tta.com\",\r\n  \"password\": \"1111\",\r\n  \"phone\": \"2123121231231\",\r\n  \"userStatus\": 3\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/user/tes11",
							"host": [
								"{{URL}}"
							],
							"path": [
								"user",
								"tes11"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful request\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"username\": \"tes11\",\r\n  \"firstName\": \"tesssaa\",\r\n  \"lastName\": \"ttessa\",\r\n  \"email\": \"ttss@tta.com\",\r\n  \"password\": \"1111\",\r\n  \"phone\": \"2123121231231\",\r\n  \"userStatus\": 3\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/user/tes11",
							"host": [
								"{{URL}}"
							],
							"path": [
								"user",
								"tes11"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Options",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let header = pm.response.headers.get(\"Access-Control-Allow-Methods\");\r",
							"pm.test(\"All header allow\", function() {\r",
							"    let par = \"GET, POST, DELETE, PUT\";\r",
							"    pm.expect(par).to.eql(header);\r",
							"    });\r",
							"console.log(header);\r",
							"\r",
							"pm.test(\"Status code is 204\", function() {\r",
							"    pm.response.to.have.status(204);\r",
							"    });\r",
							"\r",
							"pm.test(\"Responce time is less than 1000ms\", function() {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"No Content\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "OPTIONS",
				"header": [],
				"url": {
					"raw": "{{URL}}/pet",
					"host": [
						"{{URL}}"
					],
					"path": [
						"pet"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "URL",
			"value": "",
			"type": "string"
		}
	]
}